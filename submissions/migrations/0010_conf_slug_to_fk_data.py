# Generated by Django 2.2.4 on 2021-12-01 21:11

from django.db import migrations

def forwards(apps, schema_editor):
    if schema_editor.connection.alias != 'default':
        return
    Conference = apps.get_model('submissions', 'Conference')
    Panelist = apps.get_model('submissions', 'Panelist')
    Panel = apps.get_model('submissions', 'Panel')
    Textblock = apps.get_model('submissions', 'Textblock')

    for panelist in Panelist.objects.filter(con_fk = None):
        con, created = Conference.objects.get_or_create(slug=panelist.conference)
        if created:
            con.name = panelist.conference
            con.save()
        panelist.con_fk = con
        panelist.save()

    for panel in Panel.objects.filter(con_fk = None):
        con, created = Conference.objects.get_or_create(slug=panel.conference)
        if created:
            con.name = panel.conference
            con.save()
        panel.con_fk = con
        panel.save()

    for textblock in Textblock.objects.filter(con_fk = None):
        con, created = Conference.objects.get_or_create(slug=textblock.conference)
        if created:
            con.name = textblock.conference
            con.save()
        textblock.con_fk = con
        textblock.save()

def backwards(apps, schema_editor):
    if schema_editor.connection.alias != 'default':
        return
    Conference = apps.get_model('submissions', 'Conference')
    Panelist = apps.get_model('submissions', 'Panelist')
    Panel = apps.get_model('submissions', 'Panel')
    Textblock = apps.get_model('submissions', 'Textblock')

    for panelist in Panelist.objects.all():
        panelist.conference = panelist.con_fk.slug
        panelist.save()

    for panel in Panel.objects.all():
        panel.conference = panelist.con_fk.slug
        panel.save()

    for textblock in Textblock.objects.all():
        textblock.conference = panelist.con_fk.slug
        textblock.save()

class Migration(migrations.Migration):

    dependencies = [
        ('submissions', '0009_conference'),
    ]

    operations = [
        migrations.RunPython(forwards, backwards)
    ]
